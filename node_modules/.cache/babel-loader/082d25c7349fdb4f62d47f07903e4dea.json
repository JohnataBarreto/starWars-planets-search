{"ast":null,"code":"var _jsxFileName = \"/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport swPlanetsApi from './componetes/api';\nimport SwContext from './swContex';\n\nfunction StarWarProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [filterByName, setName] = useState('');\n  const [coluna, setColuna] = useState('');\n  const [operador, setOperador] = useState('');\n  const [operando, setOperando] = useState(0);\n  const [ordenador, setOrdenador] = useState('');\n  const [ordem, setOrdem] = useState('');\n\n  async function getData() {\n    const temp = await swPlanetsApi();\n    setData(temp.results);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function filterData() {\n    const temp = data.filter(planet => planet.name.includes(filterByName));\n    setData(temp);\n  }\n\n  function filtro() {\n    filterByName.length !== 0 ? filterData : getData;\n  }\n\n  useEffect(() => {\n    filtro();\n  }, [filterByName]);\n\n  function getColuna(_ref2) {\n    let {\n      target\n    } = _ref2;\n    const valor = target.value;\n    setColuna(valor);\n  }\n\n  function getOperador(_ref3) {\n    let {\n      target\n    } = _ref3;\n    const valor = target.value;\n    setOperador(valor);\n  }\n\n  function getOperando(_ref4) {\n    let {\n      target\n    } = _ref4;\n    const valor = target.value;\n    setOperando(valor);\n  }\n\n  function getOrdenador(_ref5) {\n    let {\n      target\n    } = _ref5;\n    const valor = target.value;\n    setOrdenador(valor);\n  }\n\n  function getOrdem(_ref6) {\n    let {\n      target\n    } = _ref6;\n    const valor = target.value;\n    setOrdem(valor);\n  }\n\n  function getName(_ref7) {\n    let {\n      target\n    } = _ref7;\n    const valor = target.value;\n    setName(valor);\n  }\n\n  const contextValue = {\n    data,\n    coluna,\n    operador,\n    operando,\n    ordenador,\n    ordem,\n    filterByName,\n    getName,\n    getColuna,\n    getOperador,\n    getOperando,\n    getOrdenador,\n    getOrdem\n  };\n  return /*#__PURE__*/React.createElement(SwContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nStarWarProvider.propTypes = {\n  children: PropTypes.objectOf.isRequired\n};\nexport default StarWarProvider;","map":{"version":3,"sources":["/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js"],"names":["React","useEffect","useState","PropTypes","swPlanetsApi","SwContext","StarWarProvider","children","data","setData","filterByName","setName","coluna","setColuna","operador","setOperador","operando","setOperando","ordenador","setOrdenador","ordem","setOrdem","getData","temp","results","filterData","filter","planet","name","includes","filtro","length","getColuna","target","valor","value","getOperador","getOperando","getOrdenador","getOrdem","getName","contextValue","propTypes","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport swPlanetsApi from './componetes/api';\nimport SwContext from './swContex';\n\nfunction StarWarProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filterByName, setName] = useState('');\n  const [coluna, setColuna] = useState('');\n  const [operador, setOperador] = useState('');\n  const [operando, setOperando] = useState(0);\n  const [ordenador, setOrdenador] = useState('');\n  const [ordem, setOrdem] = useState('');\n\n  async function getData() {\n    const temp = await swPlanetsApi();\n    setData(temp.results);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function filterData() {\n    const temp = data.filter((planet) => planet.name.includes(filterByName));\n    setData(temp);\n  }\n\n  function filtro() {\n    filterByName.length !== 0\n      ? filterData\n      : getData;\n  }\n\n  useEffect(() => {\n    filtro();\n  }, [filterByName]);\n\n  function getColuna({ target }) {\n    const valor = target.value;\n    setColuna(valor);\n  }\n\n  function getOperador({ target }) {\n    const valor = target.value;\n    setOperador(valor);\n  }\n\n  function getOperando({ target }) {\n    const valor = target.value;\n    setOperando(valor);\n  }\n\n  function getOrdenador({ target }) {\n    const valor = target.value;\n    setOrdenador(valor);\n  }\n\n  function getOrdem({ target }) {\n    const valor = target.value;\n    setOrdem(valor);\n  }\n\n  function getName({ target }) {\n    const valor = target.value;\n    setName(valor);\n  }\n\n  const contextValue = {\n    data,\n    coluna,\n    operador,\n    operando,\n    ordenador,\n    ordem,\n    filterByName,\n    getName,\n    getColuna,\n    getOperador,\n    getOperando,\n    getOrdenador,\n    getOrdem,\n  };\n\n  return (\n    <SwContext.Provider value={ contextValue }>\n      { children }\n    </SwContext.Provider>\n  );\n}\n\nStarWarProvider.propTypes = {\n  children: PropTypes.objectOf.isRequired,\n};\n\nexport default StarWarProvider;\n"]},"metadata":{},"sourceType":"module"}