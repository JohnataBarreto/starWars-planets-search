{"ast":null,"code":"var _jsxFileName = \"/home/johnata/projetosPessoais/starWars-planets-search/src/componetes/Table.js\";\nimport React from 'react';\nimport SwContext from '../swContex';\n\nfunction Table() {\n  return /*#__PURE__*/React.createElement(SwContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, _ref => {\n    let {\n      data,\n      filterByNumericValues,\n      deletFilter\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabFiltro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, \"BUSCANDO ALVOS POR CARACTERISTICAS\", filterByNumericValues.map((planet, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      name: planet.column,\n      className: \"filtros\",\n      \"data-testid\": \"filter\",\n      style: {\n        backgroundColor: 'green',\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, planet.column, ' ', planet.comparison, ' ', planet.value, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      name: planet.column,\n      onClick: deletFilter,\n      style: {\n        backgroundColor: 'red',\n        color: 'yelow'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"x\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: '96%',\n        height: '50%',\n        overflow: 'scroll',\n        alignItems: 'center',\n        marginLeft: '2%',\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"topo\",\n      style: {\n        textAlign: 'center',\n        backgroundColor: 'green',\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Rotation Period\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Orbital Pedriod\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Diameter\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Climate\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Gravity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Terrain\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Surfece Water\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Population\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Films\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"URL\")), data.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      style: {\n        backgroundColor: 'green',\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      \"data-testid\": \"planet-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, planet.url))))));\n  });\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/johnata/projetosPessoais/starWars-planets-search/src/componetes/Table.js"],"names":["React","SwContext","Table","data","filterByNumericValues","deletFilter","map","planet","index","column","backgroundColor","color","comparison","value","textAlign","width","height","overflow","alignItems","marginLeft","marginRight","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,GAAiB;AACf,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,QAAC;AACDC,MAAAA,IADC;AAEDC,MAAAA,qBAFC;AAGDC,MAAAA;AAHC,KAAD;AAAA,wBAKA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGID,qBAAqB,CAACE,GAAtB,CAA0B,CAACC,MAAD,EAASC,KAAT,kBACxB;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,IAAI,EAAGD,MAAM,CAACE,MAFhB;AAGE,MAAA,SAAS,EAAC,SAHZ;AAIE,qBAAY,QAJd;AAKE,MAAA,KAAK,EAAG;AACNC,QAAAA,eAAe,EAAE,OADX;AAENC,QAAAA,KAAK,EAAE;AAFD,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUIJ,MAAM,CAACE,MAVX,EAWG,GAXH,EAYIF,MAAM,CAACK,UAZX,EAaG,GAbH,EAcIL,MAAM,CAACM,KAdX,eAeE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAGN,MAAM,CAACE,MAFhB;AAGE,MAAA,OAAO,EAAGJ,WAHZ;AAIE,MAAA,KAAK,EAAG;AACNK,QAAAA,eAAe,EAAE,KADX;AAENC,QAAAA,KAAK,EAAE;AAFD,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,CADF,CAHJ,CADF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,eAoCE;AACE,MAAA,KAAK,EAAG;AACNG,QAAAA,SAAS,EAAE,QADL;AAENC,QAAAA,KAAK,EAAE,KAFD;AAGNC,QAAAA,MAAM,EAAE,KAHF;AAINC,QAAAA,QAAQ,EAAE,QAJJ;AAKNC,QAAAA,UAAU,EAAE,QALN;AAMNC,QAAAA,UAAU,EAAE,IANN;AAONC,QAAAA,WAAW,EAAE;AAPP,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAG;AACNN,QAAAA,SAAS,EAAE,QADL;AAENJ,QAAAA,eAAe,EAAE,OAFX;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApBF,CADF,EAwBIR,IAAI,CAACG,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACP;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,KAAK,EAAG;AACNE,QAAAA,eAAe,EAAE,OADX;AAENC,QAAAA,KAAK,EAAE;AAFD,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,qBAAY,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIJ,MAAM,CAACc,IAHX,CAPF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMd,MAAM,CAACe,eAAb,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMf,MAAM,CAACgB,cAAb,CAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,MAAM,CAACiB,QAAZ,CAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMjB,MAAM,CAACkB,OAAb,CAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMlB,MAAM,CAACmB,OAAb,CAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMnB,MAAM,CAACoB,OAAb,CAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMpB,MAAM,CAACqB,aAAb,CAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMrB,MAAM,CAACsB,UAAb,CAnBF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMtB,MAAM,CAACuB,KAAb,CApBF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMvB,MAAM,CAACwB,OAAb,CArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMxB,MAAM,CAACyB,MAAb,CAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMzB,MAAM,CAAC0B,GAAb,CAvBF,CADF,CAxBJ,CAXF,CApCF,CALA;AAAA,GADJ,CADF;AAiHD;;AAED,eAAe/B,KAAf","sourcesContent":["import React from 'react';\nimport SwContext from '../swContex';\n\nfunction Table() {\n  return (\n    <SwContext.Consumer>\n      { ({\n        data,\n        filterByNumericValues,\n        deletFilter,\n      }) => (\n        <div className=\"tabFiltro\">\n          <fieldset>\n            BUSCANDO ALVOS POR CARACTERISTICAS\n            {\n              filterByNumericValues.map((planet, index) => (\n                <div\n                  key={ index }\n                  name={ planet.column }\n                  className=\"filtros\"\n                  data-testid=\"filter\"\n                  style={ {\n                    backgroundColor: 'green',\n                    color: 'blue',\n                  } }\n                >\n                  { planet.column }\n                  {' '}\n                  { planet.comparison }\n                  {' '}\n                  { planet.value }\n                  <button\n                    type=\"button\"\n                    name={ planet.column }\n                    onClick={ deletFilter }\n                    style={ {\n                      backgroundColor: 'red',\n                      color: 'yelow',\n                    } }\n                  >\n                    x\n                  </button>\n                </div>\n              ))\n            }\n          </fieldset>\n          <br />\n          <div\n            style={ {\n              textAlign: 'center',\n              width: '96%',\n              height: '50%',\n              overflow: 'scroll',\n              alignItems: 'center',\n              marginLeft: '2%',\n              marginRight: '2%',\n            } }\n          >\n            <table>\n              <tr\n                className=\"topo\"\n                style={ {\n                  textAlign: 'center',\n                  backgroundColor: 'green',\n                  color: 'blue',\n                } }\n              >\n                <th>Name</th>\n                <th>Rotation Period</th>\n                <th>Orbital Pedriod</th>\n                <th>Diameter</th>\n                <th>Climate</th>\n                <th>Gravity</th>\n                <th>Terrain</th>\n                <th>Surfece Water</th>\n                <th>Population</th>\n                <th>Films</th>\n                <th>Created</th>\n                <th>Edited</th>\n                <th>URL</th>\n              </tr>\n              {\n                data.map((planet, index) => (\n                  <tr\n                    key={ index }\n                    style={ {\n                      backgroundColor: 'green',\n                      color: 'blue',\n                    } }\n                  >\n                    <td\n                      data-testid=\"planet-name\"\n                    >\n                      { planet.name }\n                    </td>\n                    <td>{ planet.rotation_period }</td>\n                    <td>{ planet.orbital_period }</td>\n                    <td>{planet.diameter}</td>\n                    <td>{ planet.climate }</td>\n                    <td>{ planet.gravity }</td>\n                    <td>{ planet.terrain }</td>\n                    <td>{ planet.surface_water }</td>\n                    <td>{ planet.population }</td>\n                    <td>{ planet.films }</td>\n                    <td>{ planet.created }</td>\n                    <td>{ planet.edited }</td>\n                    <td>{ planet.url }</td>\n                  </tr>\n                ))\n              }\n            </table>\n          </div>\n        </div>\n      ) }\n    </SwContext.Consumer>\n\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}