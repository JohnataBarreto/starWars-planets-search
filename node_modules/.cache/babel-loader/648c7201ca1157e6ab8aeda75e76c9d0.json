{"ast":null,"code":"var _jsxFileName = \"/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js\";\nimport React, { useEffect, useState } from \"react\";\nimport swPlanetsApi from \"./componetes/api\";\nimport { SwContext } from \"./swContex\";\n\nfunction StarWarProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [coluna, setColuna] = useState('');\n  const [operador, setOperador] = useState('');\n  const [operando, setOperando] = useState(0);\n  const [ordenador, setOrdenador] = useState('');\n  const [ordem, setOrdem] = useState('');\n\n  async function getData() {\n    const temp = await swPlanetsApi();\n    setData(temp.results);\n  }\n\n  function getColuna(target) {\n    const {\n      value\n    } = target;\n    setColuna(value);\n  }\n\n  function getOperador(target) {\n    const {\n      value\n    } = target;\n    setOperador(value);\n  }\n\n  function getOperando(target) {\n    const {\n      value\n    } = target;\n    setOperando(value);\n  }\n\n  function getOrdenador(target) {\n    const {\n      value\n    } = target;\n    setOrdenador(value);\n  }\n\n  function getOrdem(target) {\n    const {\n      value\n    } = target;\n    setOrdem(value);\n  }\n\n  useEffect(getData, []);\n  const contextValue = {\n    data,\n    coluna,\n    operador,\n    operando,\n    ordenador,\n    ordem,\n    getColuna,\n    getOperador,\n    getOperando,\n    getOrdenador,\n    getOrdem\n  };\n  return /*#__PURE__*/React.createElement(SwContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, children);\n}\n\nexport default StarWarProvider;","map":{"version":3,"sources":["/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js"],"names":["React","useEffect","useState","swPlanetsApi","SwContext","StarWarProvider","children","data","setData","coluna","setColuna","operador","setOperador","operando","setOperando","ordenador","setOrdenador","ordem","setOrdem","getData","temp","results","getColuna","target","value","getOperador","getOperando","getOrdenador","getOrdem","contextValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACnC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAES,QAAF,EAAYC,WAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEW,QAAF,EAAYC,WAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAEa,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAEe,KAAF,EAASC,QAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;;AAEA,iBAAeiB,OAAf,GAAyB;AACrB,UAAMC,IAAI,GAAG,MAAMjB,YAAY,EAA/B;AACAK,IAAAA,OAAO,CAACY,IAAI,CAACC,OAAN,CAAP;AACH;;AAED,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAb,IAAAA,SAAS,CAACc,KAAD,CAAT;AACH;;AAED,WAASC,WAAT,CAAqBF,MAArB,EAA6B;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAX,IAAAA,WAAW,CAACY,KAAD,CAAX;AACH;;AAED,WAASE,WAAT,CAAqBH,MAArB,EAA6B;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAT,IAAAA,WAAW,CAACU,KAAD,CAAX;AACH;;AAED,WAASG,YAAT,CAAsBJ,MAAtB,EAA8B;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAP,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH;;AAED,WAASI,QAAT,CAAkBL,MAAlB,EAA0B;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACAL,IAAAA,QAAQ,CAACM,KAAD,CAAR;AACH;;AAEDvB,EAAAA,SAAS,CAACkB,OAAD,EAAU,EAAV,CAAT;AAEA,QAAMU,YAAY,GAAG;AACjBtB,IAAAA,IADiB;AAEjBE,IAAAA,MAFiB;AAGjBE,IAAAA,QAHiB;AAIjBE,IAAAA,QAJiB;AAKjBE,IAAAA,SALiB;AAMjBE,IAAAA,KANiB;AAOjBK,IAAAA,SAPiB;AAQjBG,IAAAA,WARiB;AASjBC,IAAAA,WATiB;AAUjBC,IAAAA,YAViB;AAWjBC,IAAAA;AAXiB,GAArB;AAcA,sBACI,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMvB,QADN,CADJ;AAKH;;AAED,eAAeD,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport swPlanetsApi from \"./componetes/api\";\nimport { SwContext } from \"./swContex\";\n\nfunction StarWarProvider({ children }) {\n    const [ data, setData ] = useState([]);\n    const [ coluna, setColuna ] = useState('');\n    const [ operador, setOperador ] = useState('');\n    const [ operando, setOperando ] = useState(0);\n    const [ ordenador, setOrdenador ] = useState('');\n    const [ ordem, setOrdem ] = useState('');\n\n    async function getData() {\n        const temp = await swPlanetsApi();\n        setData(temp.results);\n    }\n\n    function getColuna(target) {\n        const { value } = target\n        setColuna(value);\n    }\n\n    function getOperador(target) {\n        const { value } = target\n        setOperador(value);\n    }\n\n    function getOperando(target) {\n        const { value } = target\n        setOperando(value);\n    }\n\n    function getOrdenador(target) {\n        const { value } = target\n        setOrdenador(value);\n    }\n\n    function getOrdem(target) {\n        const { value } = target\n        setOrdem(value);\n    }\n\n    useEffect(getData, []);\n\n    const contextValue = {\n        data,\n        coluna,\n        operador,\n        operando,\n        ordenador,\n        ordem,\n        getColuna,\n        getOperador,\n        getOperando,\n        getOrdenador,\n        getOrdem,\n    }\n\n    return(\n        <SwContext.Provider value={ contextValue }>\n            { children }\n        </SwContext.Provider>\n    );\n}\n\nexport default StarWarProvider;\n"]},"metadata":{},"sourceType":"module"}