{"ast":null,"code":"var _jsxFileName = \"/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport swPlanetsApi from './componetes/api';\nimport SwContext from './swContex';\n\nfunction StarWarProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [filterByName, setName] = useState('');\n  const [filterByNumericValues, setFilter] = useState([]);\n  const [coluna, setColuna] = useState('');\n  const [operador, setOperador] = useState('');\n  const [operando, setOperando] = useState(0);\n  const [ordenador, setOrdenador] = useState('');\n  const [ordem, setOrdem] = useState('');\n\n  async function getData() {\n    const temp = await swPlanetsApi();\n    setData(temp.results);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function filterData() {\n    const temp = data.filter(planet => planet.name.includes(filterByName));\n    setData(temp);\n  }\n\n  function filter() {\n    if (filterByName.length !== 0) {\n      filterData();\n    } else {\n      getData();\n    }\n  }\n\n  useEffect(() => {\n    filter();\n  }, [filterByName]);\n\n  function getFilter() {\n    const valor = {\n      column: coluna,\n      comparison: operador,\n      value: operando\n    };\n    setFilter(filterByNumericValues.push(valor));\n  }\n\n  function getColuna(_ref2) {\n    let {\n      target\n    } = _ref2;\n    const valor = target.value;\n    setColuna(valor);\n  }\n\n  function getOperador(_ref3) {\n    let {\n      target\n    } = _ref3;\n    const valor = target.value;\n    setOperador(valor);\n  }\n\n  function getOperando(_ref4) {\n    let {\n      target\n    } = _ref4;\n    const valor = target.value;\n    setOperando(valor);\n  }\n\n  function getOrdenador(_ref5) {\n    let {\n      target\n    } = _ref5;\n    const valor = target.value;\n    setOrdenador(valor);\n  }\n\n  function getOrdem(_ref6) {\n    let {\n      target\n    } = _ref6;\n    const valor = target.value;\n    setOrdem(valor);\n  }\n\n  function getName(_ref7) {\n    let {\n      target\n    } = _ref7;\n    const valor = target.value;\n    setName(valor);\n  }\n\n  const contextValue = {\n    data,\n    coluna,\n    operador,\n    operando,\n    ordenador,\n    ordem,\n    filterByName,\n    filterByNumericValues,\n    getFilter,\n    getName,\n    getColuna,\n    getOperador,\n    getOperando,\n    getOrdenador,\n    getOrdem\n  };\n  return /*#__PURE__*/React.createElement(SwContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nStarWarProvider.propTypes = {\n  children: PropTypes.objectOf.isRequired\n};\nexport default StarWarProvider;","map":{"version":3,"sources":["/home/johnata/trybe/projetos/sd-019-a-project-starwars-planets-search/src/swProvider.js"],"names":["React","useEffect","useState","PropTypes","swPlanetsApi","SwContext","StarWarProvider","children","data","setData","filterByName","setName","filterByNumericValues","setFilter","coluna","setColuna","operador","setOperador","operando","setOperando","ordenador","setOrdenador","ordem","setOrdem","getData","temp","results","filterData","filter","planet","name","includes","length","getFilter","valor","column","comparison","value","push","getColuna","target","getOperador","getOperando","getOrdenador","getOrdem","getName","contextValue","propTypes","objectOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport swPlanetsApi from './componetes/api';\nimport SwContext from './swContex';\n\nfunction StarWarProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filterByName, setName] = useState('');\n  const [filterByNumericValues, setFilter] = useState([]);\n  const [coluna, setColuna] = useState('');\n  const [operador, setOperador] = useState('');\n  const [operando, setOperando] = useState(0);\n  const [ordenador, setOrdenador] = useState('');\n  const [ordem, setOrdem] = useState('');\n\n  async function getData() {\n    const temp = await swPlanetsApi();\n    setData(temp.results);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function filterData() {\n    const temp = data.filter((planet) => planet.name.includes(filterByName));\n    setData(temp);\n  }\n\n  function filter() {\n    if (filterByName.length !== 0) { filterData(); } else { getData(); }\n  }\n\n  useEffect(() => {\n    filter();\n  }, [filterByName]);\n\n  function getFilter() {\n    const valor = {\n      column: coluna,\n      comparison: operador,\n      value: operando,\n    };\n    setFilter(filterByNumericValues.push(valor));\n  }\n\n  function getColuna({ target }) {\n    const valor = target.value;\n    setColuna(valor);\n  }\n\n  function getOperador({ target }) {\n    const valor = target.value;\n    setOperador(valor);\n  }\n\n  function getOperando({ target }) {\n    const valor = target.value;\n    setOperando(valor);\n  }\n\n  function getOrdenador({ target }) {\n    const valor = target.value;\n    setOrdenador(valor);\n  }\n\n  function getOrdem({ target }) {\n    const valor = target.value;\n    setOrdem(valor);\n  }\n\n  function getName({ target }) {\n    const valor = target.value;\n    setName(valor);\n  }\n\n  const contextValue = {\n    data,\n    coluna,\n    operador,\n    operando,\n    ordenador,\n    ordem,\n    filterByName,\n    filterByNumericValues,\n    getFilter,\n    getName,\n    getColuna,\n    getOperador,\n    getOperando,\n    getOrdenador,\n    getOrdem,\n  };\n\n  return (\n    <SwContext.Provider value={ contextValue }>\n      { children }\n    </SwContext.Provider>\n  );\n}\n\nStarWarProvider.propTypes = {\n  children: PropTypes.objectOf.isRequired,\n};\n\nexport default StarWarProvider;\n"]},"metadata":{},"sourceType":"module"}